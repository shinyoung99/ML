# 기계학습 정리노트 13주차

<질문>

스트라이드란? 스트라이드라는 개념을 이해하는데 도움되는 자료를 찾아 첨부

머신러닝에서의 "스트라이드"는 일반적으로 데이터를 처리하거나 모델을 학습할 때 사용되는 용어입니다. 여기서 스트라이드는 입력 데이터의 이동 간격을 나타냅니다. 주로 합성곱 신경망 (Convolutional Neural Network, CNN)이나 풀링 레이어에서 사용됩니다.

1. **합성곱 신경망(Convolutional Neural Network, CNN):** 합성곱 연산을 수행할 때, 필터(커널)가 입력 데이터를 훑는 간격을 스트라이드라고 합니다. 스트라이드가 크면 출력 크기가 작아지고, 스트라이드가 작으면 출력 크기가 커집니다. 스트라이드를 조절함으로써 모델의 특징 추출과 계산 효율을 조절할 수 있습니다.
2. **풀링 레이어(Pooling Layer):** 맥스 풀링이나 평균 풀링과 같은 풀링 레이어에서도 스트라이드가 사용됩니다. 이는 입력 데이터를 작은 영역으로 나누어 각 영역의 특정 값을 선택하거나 계산하는 과정에서 사용됩니다.

스트라이드는 모델의 하이퍼파라미터 중 하나로, 적절한 값을 선택하는 것이 모델의 학습 및 예측 성능에 영향을 미칠 수 있습니다.

최대 풀링층이란? 이해를 안되는 개념을 찾음 

최대 풀링층(Max Pooling Layer)은 합성곱 신경망(Convolutional Neural Network, CNN) 아키텍처에서 사용되는 풀링 연산 중 하나입니다. 이 층은 입력 데이터의 작은 영역에서 가장 큰 값을 선택하여 다음 층으로 전달하는 역할을 합니다.

최대 풀링층의 주요 특징은 다음과 같습니다:

1. **데이터 축소(Data Reduction):** 최대 풀링층은 입력 데이터의 크기를 줄이는 역할을 합니다. 이를 통해 계산 비용을 감소시키고 모델의 파라미터 수를 줄여 과적합을 방지하는 효과가 있습니다.
2. **Translation Invariance(이동 불변성):** 최대 풀링은 입력 데이터의 작은 영역에서 가장 큰 값만 선택하므로, 입력에 대한 작은 변화에 덜 민감하게 반응합니다. 이로써 모델이 입력의 위치에 상대적으로 불변하게 됩니다.
3. **특징 강조(Feature Map Emphasis):** 최대 풀링은 각 영역에서 가장 중요한 특징을 강조하는 역할을 합니다. 이는 입력 이미지나 특징 맵에서 가장 강한 신호를 추출하여 중요한 정보를 보존하는 데 도움을 줍니다.

최대 풀링층은 주로 합성곱 신경망의 합성곱층 뒤에 배치되어 사용되며, 일반적으로 합성곱 연산의 결과로 얻어진 특징 맵의 각 영역에서 최대 값을 추출합니다. 이는 주로 2x2 또는 3x3 크기의 윈도우(window)를 사용하여 수행되며, 스트라이드(stride)를 조절하여 특징 맵의 크기를 조절할 수 있습니다.

머신러닝과 딥러닝의 차이점

머신러닝과 딥러닝은 서로 관련이 있지만, 몇 가지 중요한 차이가 있습니다.

### 1. **정의:**

- **머신러닝(Machine Learning):** 데이터를 기반으로 컴퓨터 시스템이 학습하고 패턴을 발견하여 예측을 수행하는 기술을 포괄적으로 나타냅니다. 머신러닝에는 규칙 기반 학습, 지도 학습, 비지도 학습 등 다양한 접근 방식이 포함됩니다.
- **딥러닝(Deep Learning):** 머신러닝의 한 분야로, 인공 신경망(ANN) 구조를 사용하여 복잡한 문제를 해결하고 데이터에서 표현을 학습하는 데 중점을 둡니다. 딥러닝은 대규모의 신경망을 사용하여 다양한 계층에서 특징을 추출하고 학습하는 방식입니다.

### 2. **표현 학습의 깊이:**

- **머신러닝:** 전통적인 머신러닝 방법은 주로 입력 데이터로부터 특징을 추출하고, 그 특징을 사용하여 모델을 학습합니다. 이런 방식은 특징 공학(Feature Engineering)에 의존하며, 문제에 따라 사람이 수동으로 특징을 설계해야 할 수 있습니다.
- **딥러닝:** 딥러닝은 대규모의 데이터와 계층적인 특징 추출을 통해 특징을 자동으로 학습하는 데 중점을 둡니다. 신경망은 여러 계층으로 구성되어 있고, 이 계층들이 점진적으로 데이터의 추상적인 표현을 학습합니다. 딥러닝은 특히 이미지, 음성, 자연어 처리 등에서 높은 성능을 보이며, 특히 많은 양의 데이터와 높은 계산 능력이 필요합니다.

### 3. **데이터 양 및 계산 요구 사항:**

- **머신러닝:** 일반적으로 상대적으로 작은 규모의 데이터에서도 잘 작동할 수 있습니다. 일부 모델은 작은 규모의 데이터에서도 좋은 성능을 발휘할 수 있지만, 특히 고차원이거나 복잡한 문제에는 한계가 있을 수 있습니다.
- **딥러닝:** 대규모의 데이터셋이 필요하며, 모델의 학습에는 많은 계산 리소스가 필요합니다. GPU 또는 특화된 하드웨어를 사용하여 대량의 행렬 및 텐서 연산을 수행하는 것이 일반적입니다.

### 4. **응용 분야:**

- **머신러닝:** 작은 규모의 데이터로도 효과적으로 사용될 수 있는 다양한 응용 분야가 있습니다. 이에는 회귀 분석, 분류, 군집화, 강화 학습 등이 포함됩니다.
- **딥러닝:** 대규모의 데이터와 높은 계산 능력이 필요한 응용 분야에서 주로 사용됩니다. 이미지 인식, 음성 인식, 자연어 처리, 게임 등에서 딥러닝이 효과적으로 적용되고 있습니다.

따라서, 딥러닝은 머신러닝의 한 분야로서 더 많은 데이터와 계산 리소스를 필요로 하며, 복잡하고 대규모인 문제에 적합하게 설계되었습니다.

<정리>

합성곱신경망(CNN) → 합성곱 픙, 풀링 층

합성곱 층 → 스트라이드 : 한 수용장과 다음 수용장 사이의 간격, 입력데이터에 필터를 적용할 때 이동할 간격을 조절하는 것 , 즉 필터가 이동할 간격을 말한다. 

첫번째 합성곱 층 뉴런은 입력 이미지의 모든 픽셀에 연결 되는 것이 아니라 합성곱 층 뉴런의 수용장 안에 있는 픽셀에만 연결

필터(합성곱 커널) → 입력뉴런에 사용될 가중치 역할 수행

여러 가지 특성 맵 쌓기 → 특성맵, 컬러채널

텐서플로 구현 

풀링 층 → 계산량과 메모리 사용량을 줄이면서 과대적합의 위험도를 줄여주는 용도로 사용, 뉴런 가중치가 없음

최대 풀링층 → 2 x 2 크기의 풀링 커널 : 블랙박스…?  히든 레이어를 깊게 쌓는다 ? 배니싱을 쌓는데 우여곡절이 많았음, 좋은 결과가 나온지를 알 수 없다. 

평균 풀링 층 → 풀링커널 구역 내의 평균값을 활용, 성능이 떨어짐

전역 평균 풀링 층 → 각 특성맵의 평균 계산

전형적인 CNN 구조 → 네트워크를 통과하여 진행할수록 이미지는 점점 작아지지만, 합성곱 층 때문에 일반적으로 더욱 더 깊어짐 (더 많은 특성 맵을 가지게 됨)

커널크기가 크면 정보량을 잃지 않음 → 가면 갈 수록 커널 크기가 줄어든다. 계산량이 줄어든다. 

인셉션 모델을 통해 파라미터를 사용함? →GoogLeNet

SE block → 입력된 특성맵을 대상으로 깊이별 패턴 특성 분석

뎁스를 통째로 곱한다.? 채널별로 하니까 계산량이 줄어든다
