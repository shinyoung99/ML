# 기계학습  과제#3

201703205 김현준 202184032 안신영\

문제1) 기계 학습에서 학습이란 무엇인지를 정리하시오(2점).

( 가중치, 손실함수가 무엇인지를 정리하고, 데이터, 가중치, 손실함수를 이용하여 학습이 무엇인지를 정리함.)

1. 기계 학습아란?  컴퓨터 시스템이 패턴과 추론에 의존하여 명시적 지시 없이 태스크를 수행하는 데 사용하는 알고리즘과 통계 모델을 개발하는 과학입니다. 컴퓨터 시스템은 기계 학습 알고리즘을 사용하여 대량의 기록 데이터를 처리하고 데이터 패턴을 식별합니다. 이를 통해 지정된 입력 데이터 집합에서 더 정확하게 결과를 예측할 수 있습니다. 예를 들어, 데이터 사이언티스트는 수백만 개의 스캔 이미지와 해당 진단을 저장하여 X선 이미지로 암을 진단하도록 의료 애플리케이션을 훈련할 수 있습니다.
2. 머신러닝에서 ‘학습’의 구체적인 결과는 무엇인가? 인산은 학습을 한 뒤에 학습한 내용을 두뇌에 기억하고 이해하거나(개념지식) 몸에 익힌다. (체험 지식) 기계의 학습은 인간처럼 뭔가를 이해하는 것이 아니고, 매개 변수 또는 가중치의 형태로 나타난다. 머신러닝은 입력값에 대응하는 결과 값이 제대로 나오도록 하는 최적의 매개변수 값을 찾는 과정아며, 그때 학습의 결과물은 매개변수 값이다.

예를 들면, 컴퓨터에게 계산은 시킨다고 해보자 3 x 2 = ? , 8 x 3 = ? 와 같이 입력값을 주고 결과값을 찾으라고 하는 것이 일반적인 방법이다. 답을 구하기 위해 컴퓨터에 “3*2”, “8*3” 등 명령어를 입력하여 답을 구한다. 하지만 머신러닝 방법에서는 다른 것을 묻는다. 

(3 , 2) (1 , 4), (5 , 5), (8 , 3)을 입력값이라 하고, 1, -3, 0, 5는 정답(레이블)이라고 한다. 기계는 학습을 통해 입력값에서 정답을 만들어내는 조건, 즉 가중치 또는 파라미터 값을 찾아낸다 이렇듯 입력값과 출력값(정답)을 활용하여 적절한 매개변수 값을 찾아내는  과정을 기계학습(머신러닝)이라고 하며, 여기서 ‘학습’의 결과는 매개변수 값으로 나타난다.

<img width="371" alt="스크린샷 2023-11-05 18 29 01" src="https://github.com/shinyoung99/ML/assets/129648186/e11b0acf-1941-49aa-a92b-7aa3794bdc46">

1. 가중치란? 각 입력 신호가 **결과 출력에 미치는 중요도를 조절**하는 매개변수
2. 손실함수란? 신경망 학습에서 **최적의 매개변수 값을 탐색하기 위해 사용하는 지표는 손실 함수**입니다. 손실 함수는 신경망 성능의 '나쁨'을 나타내는 지표입니다. 현재의 신경망이 학습 데이터를 얼마나 잘 처리하지 못 하느냐를 나타냅니다

최종적으로 정리하면

기계 학습에서 학습은 모델이 데이터로부터 패턴을 학습하여 작업을 수행하는 과정을 의미합니다. 이 과정은 데이터, 가중치, 손실 함수의 상호 작용을 통해 이루어집니다.

데이터, 가중치, 손실 함수를 이용하여 학습은 기계 학습의 핵심 원리를 설명하는 프로세스입니다. 이것을 간단하게 요약하면 다음과 같습니다:

1. 데이터 (Data):
    - 데이터는 학습을 위한 정보의 원천으로, 입력 정보와 관련된 실제 관측값을 포함합니다. 데이터는 학습 과정 중에서 모델에 입력으로 제공되며, 이 데이터에는 특성 및 해당 데이터 포인트의 실제 결과(타겟)가 포함됩니다.
2. 가중치 (Weights):
    - 가중치는 모델의 학습 가능한 파라미터입니다. 모델은 입력 데이터를 가중치와 결합하여 예측을 수행합니다. 이러한 가중치는 초기에는 무작위로 설정되며 학습 과정 중에 최적의 값으로 조절됩니다. 가중치는 모델의 학습 가능한 매개 변수로, 이들의 값을 조정하여 모델이 데이터에 적합하게 맞춰지게 됩니다.
3. 손실 함수 (Loss Function):
    - 손실 함수는 모델의 예측값과 실제 타겟값 사이의 차이를 측정하는 함수입니다. 이 차이를 손실 또는 오차로 표현하며, 목표는 손실을 최소화하여 모델이 더 정확한 예측을 수행하도록 하는 것입니다. 손실 함수는 모델의 성능을 평가하고 최적화 과정에서 사용됩니다.

학습의 프로세스:

1. 초기에 모델의 가중치는 무작위로 설정됩니다.
2. 모델은 학습 데이터를 사용하여 예측을 수행하고 손실 함수를 통해 예측의 오차를 측정합니다.
3. 손실을 최소화하기 위해 가중치를 조정하는 최적화 알고리즘(예를 들어, 경사 하강법)을 사용하여 가중치를 갱신합니다.
4. 이러한 과정을 반복하여 가중치를 조절하고 모델을 학습시킵니다.
5. 모델이 학습 데이터와 검증 데이터에 대해 일정 수준의 성능을 보일 때까지 반복하여 학습을 완료합니다.

학습은 이러한 반복적인 과정을 통해 모델이 주어진 데이터에 대해 최적의 예측을 수행하도록 만드는 프로세스를 나타냅니다.

문제2) 확률적 경사 하강법의 소스 코드를 분석하시오(2점)

1. **목표**:
    - 이 코드는 선형 회귀 모델을 훈련시키기 위한 확률적 경사 하강법(SGD) 알고리즘을 구현하는 데 사용됩니다. 주요 목표는 주어진 데이터셋에서 모델의 평균 제곱 오차(MSE)를 최소화하는 것입니다.
2. **초기화**:
    - `n_epochs`는 50으로 설정되어 있으며, 훈련 프로세스가 50번의 에포크를 거칠 것을 나타냅니다.
    - `t0`와 `t1`은 학습 스케줄에서 사용되는 하이퍼파라미터이지만 코드 스니펫에서 정확한 값과 의미가 설명되지 않았습니다.
    - `theta`는 모델 파라미터를 나타내는 2x1 행렬로 초기화됩니다. 이러한 파라미터는 훈련 과정 중에 업데이트됩니다.
3. **학습 스케줄**:
    - `learning_schedule` 함수는 각 반복에서의 학습률을 결정하는 데 사용됩니다. 학습률은 매개변수 업데이트 시 단계 크기를 조절하는 데 중요합니다. 이 스케줄은 훈련이 진행됨에 따라 학습률을 감소시킵니다. 이는 수렴을 보장하고 과도한 변동을 피하기 위한 일반적인 방법입니다.
4. **훈련 루프**:
    - 코드에는 훈련을 위한 중첩된 루프 구조가 포함되어 있습니다.
        - 외부 루프는 `n_epochs`를 반복하며 훈련 에포크의 수를 나타냅니다.
        - 내부 루프는 데이터를 반복하며 `m`과 `X_b`의 세부 정보는 코드 스니펫에서 제공되지 않습니다. `m`은 데이터 포인트의 수를 나타내며, `X_b`는 적절한 특성을 가진 입력 데이터로 가정됩니다.
        - 내부 루프 내에서:
            - 무작위 인덱스가 `np.random.randint(m)`를 사용하여 무작위 데이터 포인트를 선택합니다.
            - `xi`와 `yi`는 무작위 인덱스를 기반으로 데이터셋에서 추출됩니다.
            - 그래디언트는 모델 파라미터 업데이트를 위해 선택한 데이터 포인트에서 확률적 경사 하강법 업데이트에 따라 계산됩니다. 그래디언트 계산은 모델 파라미터와 관련된 평균 제곱 오차의 그래디언트 공식을 따릅니다.
            - 학습률 `eta`는 현재 에포크 및 데이터 포인트를 기반으로 `learning_schedule` 함수를 사용하여 결정됩니다.
            - 모델 파라미터 `theta`는 계산된 그래디언트와 학습률을 사용하여 업데이트되며, 표준 경사 하강 업데이트 규칙을 따릅니다.
5. **확률적 경사 하강법**:
    - 이 코드는 경사 하강법의 확률적 버전을 구현합니다. 각 반복에서 전체 데이터셋 대신 무작위 데이터 포인트를 선택하여 모델 파라미터를 업데이트합니다. 이 방식은 대용량 데이터셋에 유용하며 모델을 더 자주 업데이트합니다.
6. **학습률 스케줄**:
    - 코드는 훈련 중에 학습률을 조정하는 학습률 스케줄을 사용합니다. 학습률은 시간이 지남에 따라 감소하여 알고리즘이 최소값으로 수렴하고 과도한 발산을 피할 수 있도록합니다.
